{"version":3,"sources":["components/Contactform/ContactForm.module.css","components/Notification/Notification.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Phonebook/Phonebook.module.css","redux/phonebook/phonebook-operations.js","components/Notification/Notification.js","components/Contactform/ContactForm.js","redux/phonebook/phonebook-selectors.js","components/ContactList/ContactList.js","components/Loader/Loader.js","components/Filter/Filter.js","components/Phonebook/Phonebook.js"],"names":["module","exports","contact","dispatch","a","addContactRequest","axios","post","data","addContactSuccess","addContactError","message","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContactRequest","get","fetchContactSuccess","fetchContactError","Notification","sameContact","currentNumber","className","styles","ContactForm","state","name","number","alert","handleContact","event","currentTarget","value","setState","handleSubmit","preventDefault","checkContact","id","shortid","generate","props","addContact","clearInput","contacts","find","toLowerCase","alertState","setTimeout","Container","onSubmit","this","type","onChange","FormInput","FormBtn","CSSTransition","in","timeout","classNames","enter","ContactFormNotificationFadeEnter","enterActive","ContactFormNotificationFadeEnterActive","exit","ContactFormNotificationFadeExit","exitActive","ContactFormNotificationFadeExitActive","unmountOnExit","Component","connect","items","phonebookOperations","getFilter","filter","getContacts","getLoading","loading","getfilteredElements","createSelector","normalizedFilter","includes","ContactList","filteredContacts","deleteContact","resetFilter","TransitionGroup","component","classnames","ListContainer","map","ContactListItemFadeEnter","ContactListItemFadeEnterActive","ContactListItemFadeExit","ContactListItemFadeExitActive","Contact","ContactInfo","onClick","length","DeleteBtn","phonebookSelectors","changeFilter","Loader","color","height","width","FilterFadeEnter","FilterFadeEnterActive","FilterFadeExit","FilterFadeExitActive","InputContainer","FilterHeader","FilterInput","Phonebook","fetchContacts","appear","HeaderFadeAppear","appearActive","HeaderFadeAppearActive","isLoadingContats","contactSelectors"],"mappings":"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","file":"static/js/5.e0f86e72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactForm_Container__3CBub\",\"InputName\":\"ContactForm_InputName__27yDK\",\"FormInput\":\"ContactForm_FormInput__3Wb2-\",\"FormBtn\":\"ContactForm_FormBtn__2H9pa\",\"ContactFormNotificationFadeEnter\":\"ContactForm_ContactFormNotificationFadeEnter__3aUsD\",\"ContactFormNotificationFadeEnterActive\":\"ContactForm_ContactFormNotificationFadeEnterActive__1Jh3H\",\"ContactFormNotificationFadeExit\":\"ContactForm_ContactFormNotificationFadeExit__1WdwM\",\"ContactFormNotificationFadeExitActive\":\"ContactForm_ContactFormNotificationFadeExitActive__KICGG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__3ye5D\",\"FormBtn\":\"Notification_FormBtn__EInIx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ContactList_Container__3ll1X\",\"Contact\":\"ContactList_Contact__WwvDz\",\"DeleteBtn\":\"ContactList_DeleteBtn__2tlmc\",\"ContactInfo\":\"ContactList_ContactInfo__2Rd8K\",\"ContactListItemFadeEnter\":\"ContactList_ContactListItemFadeEnter__2tCz8\",\"ContactListItemFadeEnterActive\":\"ContactList_ContactListItemFadeEnterActive__3JK5s\",\"ContactListItemFadeExit\":\"ContactList_ContactListItemFadeExit__guW5T\",\"ContactListItemFadeExitActive\":\"ContactList_ContactListItemFadeExitActive__2eXWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Filter_Container__3XTUE\",\"InputContainer\":\"Filter_InputContainer__21nGU\",\"FilterInput\":\"Filter_FilterInput__3A0JT\",\"FilterHeader\":\"Filter_FilterHeader__2npRo\",\"FilterFadeEnter\":\"Filter_FilterFadeEnter__gaRsE\",\"FilterFadeEnterActive\":\"Filter_FilterFadeEnterActive__3ApC5\",\"FilterFadeExit\":\"Filter_FilterFadeExit__34rdl\",\"FilterFadeExitActive\":\"Filter_FilterFadeExitActive__1sIKJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Phonebook_Container__1UQmZ\",\"HeaderFadeAppear\":\"Phonebook_HeaderFadeAppear__yzEGW\",\"HeaderFadeAppearActive\":\"Phonebook_HeaderFadeAppearActive__kuRjW\",\"ContactListFadeEnter\":\"Phonebook_ContactListFadeEnter__10AmB\",\"ContactListFadeEnterActive\":\"Phonebook_ContactListFadeEnterActive__1iRsu\",\"ContactListFadeExit\":\"Phonebook_ContactListFadeExit__1wm3E\",\"ContactListFadeExitActive\":\"Phonebook_ContactListFadeExitActive__tMQGZ\",\"ContactListFadeAppear\":\"Phonebook_ContactListFadeAppear__22kx_\",\"ContactListFadeAppearActive\":\"Phonebook_ContactListFadeAppearActive__2pEuQ\"};","import axios from 'axios'\r\nimport {\r\n    addContactSuccess,\r\n    addContactRequest,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n} from './phonebook-actions'\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n    dispatch(fetchContactRequest())\r\n    try {\r\n        const { data } = await axios.get('/contacts')\r\n        dispatch(fetchContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(fetchContactError(error.message))\r\n    }\r\n}\r\n\r\nconst addContact = (contact) => async (dispatch) => {\r\n    dispatch(addContactRequest())\r\n\r\n    try {\r\n        const { data } = await axios.post('/contacts', contact)\r\n        dispatch(addContactSuccess(data))\r\n    } catch (error) {\r\n        dispatch(addContactError(error.message))\r\n    }\r\n}\r\n\r\nconst deleteContact = (contactId) => async (dispatch) => {\r\n    dispatch(deleteContactRequest())\r\n    try {\r\n        const { data } = await axios.delete(`/contacts/${contactId}`)\r\n        dispatch(deleteContactSuccess(contactId))\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error.message))\r\n    }\r\n}\r\n\r\nexport default { addContact, deleteContact, fetchContacts }\r\n","import React, { Component } from 'react'\r\nimport styles from './Notification.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nNotification.propTypes = {\r\n    sameContact: PropTypes.string.isRequired,\r\n    currentNumber: PropTypes.string.isRequired,\r\n}\r\n\r\nfunction Notification({ sameContact, currentNumber }) {\r\n    return (\r\n        <div className={styles.Notification}>\r\n            {sameContact && currentNumber ? (\r\n                <div>\r\n                    <h2>{sameContact} is already in contacts</h2>\r\n                    <h3>Please check name and try again</h3>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <h2>Name or number is epmty</h2>\r\n                    <h3>Please fill data and try again</h3>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { Component } from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { connect } from 'react-redux'\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations'\r\nimport styles from './ContactForm.module.css'\r\nimport shortid from 'shortid'\r\nimport './ContactForm.css'\r\nimport Notification from '../Notification/Notification'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        alert: false,\r\n    }\r\n\r\n    handleContact = (event) => {\r\n        const { name, value } = event.currentTarget\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (this.checkContact()) {\r\n            return\r\n        } else {\r\n            const contact = {\r\n                id: shortid.generate(),\r\n                name: this.state.name,\r\n                number: this.state.number,\r\n            }\r\n            this.props.addContact(contact)\r\n            this.clearInput()\r\n        }\r\n    }\r\n    checkContact = () => {\r\n        if (\r\n            this.props.contacts.find((contact) => {\r\n                return (\r\n                    contact.name.toLowerCase() ===\r\n                        this.state.name.toLowerCase() &&\r\n                    contact.number.toLowerCase() ===\r\n                        this.state.number.toLowerCase()\r\n                )\r\n            }) ||\r\n            this.state.name == '' ||\r\n            this.state.number == ''\r\n        ) {\r\n            this.setState({ alert: true })\r\n            this.alertState()\r\n            return true\r\n        }\r\n    }\r\n\r\n    clearInput = () => {\r\n        this.setState({ name: '', number: '' })\r\n    }\r\n\r\n    alertState = () => {\r\n        setTimeout(() => {\r\n            this.setState({ alert: false })\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.Container}>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Name <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.name}\r\n                            name=\"name\"\r\n                            onChange={this.handleContact}\r\n                            className={styles.FormInput}\r\n                        />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Number <br />\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.number}\r\n                            name=\"number\"\r\n                            onChange={this.handleContact}\r\n                            className={styles.FormInput}\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" className={styles.FormBtn}>\r\n                        Add contact\r\n                    </button>\r\n                </form>\r\n\r\n                <CSSTransition\r\n                    in={this.state.alert}\r\n                    timeout={250}\r\n                    classNames={{\r\n                        enter: styles.ContactFormNotificationFadeEnter,\r\n                        enterActive:\r\n                            styles.ContactFormNotificationFadeEnterActive,\r\n                        exit: styles.ContactFormNotificationFadeExit,\r\n                        exitActive:\r\n                            styles.ContactFormNotificationFadeExitActive,\r\n                    }}\r\n                    unmountOnExit\r\n                >\r\n                    <Notification\r\n                        sameContact={this.state.name}\r\n                        currentNumber={this.state.number}\r\n                    ></Notification>\r\n                </CSSTransition>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    addContact: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.items,\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addContact: (contact) => dispatch(phonebookOperations.addContact(contact)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n","import { createSelector } from '@reduxjs/toolkit'\r\nconst getLoading = (state) => state.contacts.loading\r\nconst getFilter = (state) => state.contacts.filter\r\nconst getContacts = (state) => state.contacts.items\r\n\r\nconst getfilteredElements = createSelector(\r\n    [getFilter, getContacts],\r\n    (filter, contacts) => {\r\n        const normalizedFilter = filter.toLowerCase()\r\n        return contacts.filter((contact) =>\r\n            contact.name.toLowerCase().includes(normalizedFilter)\r\n        )\r\n    }\r\n)\r\n\r\nexport default {\r\n    getLoading,\r\n    getFilter,\r\n    getfilteredElements,\r\n    getContacts,\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations'\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions'\r\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.css'\r\nimport './ContactList.css'\r\n\r\nclass ContactList extends Component {\r\n    render() {\r\n        const {\r\n            filteredContacts,\r\n            contacts,\r\n            deleteContact,\r\n            resetFilter,\r\n        } = this.props\r\n        return (\r\n            <div className={styles.Container}>\r\n                <TransitionGroup\r\n                    component=\"ul\"\r\n                    classnames={styles.ListContainer}\r\n                >\r\n                    {filteredContacts.map((contact) => (\r\n                        <CSSTransition\r\n                            timeout={750}\r\n                            classNames={{\r\n                                enter: styles.ContactListItemFadeEnter,\r\n                                enterActive:\r\n                                    styles.ContactListItemFadeEnterActive,\r\n                                exit: styles.ContactListItemFadeExit,\r\n                                exitActive:\r\n                                    styles.ContactListItemFadeExitActive,\r\n                            }}\r\n                            key={contact.id}\r\n                        >\r\n                            <li className={styles.Contact}>\r\n                                <span className={styles.ContactInfo}>\r\n                                    {contact.name} : {contact.number}\r\n                                </span>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={() => {\r\n                                        deleteContact(contact.id)\r\n                                        if (contacts.length == 2) {\r\n                                            resetFilter()\r\n                                        }\r\n                                    }}\r\n                                    className={styles.DeleteBtn}\r\n                                >\r\n                                    Delete\r\n                                </button>\r\n                            </li>\r\n                        </CSSTransition>\r\n                    ))}\r\n                </TransitionGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.array.isRequired,\r\n    contacts: PropTypes.array.isRequired,\r\n    deleteContact: PropTypes.func.isRequired,\r\n    resetFilter: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    filteredContacts: phonebookSelectors.getfilteredElements(state),\r\n    contacts: phonebookSelectors.getContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    deleteContact: (id) => {\r\n        dispatch(phonebookOperations.deleteContact(id))\r\n    },\r\n    resetFilter: () => {\r\n        dispatch(changeFilter(''))\r\n    },\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n","import React, { Component } from 'react'\r\nimport Spinner from 'react-loader-spinner'\r\n\r\nexport default class Loader extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Spinner\r\n                    type=\"ThreeDots\"\r\n                    color=\"#ff3b0f\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions'\r\nimport PropTypes from 'prop-types'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport styles from './Filter.module.css'\r\nimport phonebookSelectors from '../../redux/phonebook/phonebook-selectors'\r\n\r\nfunction Filter({ contacts, value, filter }) {\r\n    return (\r\n        <CSSTransition\r\n            in={contacts.length > 1}\r\n            timeout={250}\r\n            unmountOnExit\r\n            classNames={{\r\n                enter: styles.FilterFadeEnter,\r\n                enterActive: styles.FilterFadeEnterActive,\r\n                exit: styles.FilterFadeExit,\r\n                exitActive: styles.FilterFadeExitActive,\r\n            }}\r\n        >\r\n            <div className={styles.Container}>\r\n                <label className={styles.InputContainer}>\r\n                    <h1 className={styles.FilterHeader}>\r\n                        Find contacts by Name\r\n                    </h1>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={filter}\r\n                        className={styles.FilterInput}\r\n                    />\r\n                </label>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    filter: PropTypes.func.isRequired,\r\n    contacts: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.items,\r\n    value: phonebookSelectors.getFilter(state),\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    filter: (event) => dispatch(changeFilter(event.currentTarget.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport phonebookOperations from '../../redux/phonebook/phonebook-operations'\r\nimport ContactForm from '../Contactform/ContactForm'\r\nimport ContactList from '../ContactList/ContactList'\r\nimport contactSelectors from '../../redux/phonebook/phonebook-selectors'\r\nimport Loader from '../Loader/Loader'\r\nimport Filter from '../Filter/Filter'\r\nimport styles from './Phonebook.module.css'\r\nimport PropTypes from 'prop-types'\r\nimport './Phonebook.css'\r\n\r\nclass Phonebook extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchContacts()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <CSSTransition\r\n                in={true}\r\n                appear={true}\r\n                timeout={500}\r\n                classNames={{\r\n                    appear: styles.HeaderFadeAppear,\r\n                    appearActive: styles.HeaderFadeAppearActive,\r\n                }}\r\n            >\r\n                <div className={styles.Container}>\r\n                    <CSSTransition\r\n                        in={true}\r\n                        appear={true}\r\n                        timeout={500}\r\n                        classNames={{\r\n                            appear: styles.HeaderFadeAppear,\r\n                            appearActive: styles.HeaderFadeAppearActive,\r\n                        }}\r\n                    >\r\n                        <h1>Phonebook</h1>\r\n                    </CSSTransition>\r\n\r\n                    <ContactForm />\r\n\r\n                    <CSSTransition\r\n                        in={this.props.contacts.length >= 1}\r\n                        timeout={0}\r\n                        unmountOnExit\r\n                    >\r\n                        <Filter />\r\n                    </CSSTransition>\r\n                    {this.props.isLoadingContats && <Loader />}\r\n                    <CSSTransition\r\n                        in={this.props.contacts.length > 0}\r\n                        timeout={250}\r\n                        unmountOnExit\r\n                    >\r\n                        <ContactList />\r\n                    </CSSTransition>\r\n                </div>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}\r\n\r\nPhonebook.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    isLoadingContats: PropTypes.bool.isRequired,\r\n    fetchContacts: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    contacts: state.contacts.items,\r\n    isLoadingContats: contactSelectors.getLoading(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook)\r\n"],"sourceRoot":""}