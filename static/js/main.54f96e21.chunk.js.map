{"version":3,"sources":["redux/phonebook/phonebook-actions.js","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","components/AuthNav/AuthNav.module.css","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/AppBar/AppBar.module.css","components/Container/Container.module.css","App.module.css","components/Container/Container.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","img/avatar.svg","img/logout-icon.svg","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","img/background.jpg","components/PrivateRoute/privateRoute.js","components/PublicRoute/publicRoute.js","App.js","redux/phonebook/phonebook-reducers.js","redux/auth/auth-reducers.js","redux/phonebook/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","response","data","registerSuccess","registerError","message","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","login","loginRequest","loginSuccess","loginError","logout","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","Container","children","className","styles","state","isAuthenticated","user","name","connect","authSelectors","to","exact","Link","activeClassName","LinkActive","HeaderTitle","mapDispatchToProps","onLogout","authOperations","avatar","defaultAvatar","logoutIcon","src","alt","width","height","Avatar","ContainerUserCorner","UserName","type","onClick","LogOutBtn","AuthNav","Registration","Header","Component","component","reDirectTo","routeProps","render","props","restricted","HomePage","lazy","Login","Register","Phonebook","App","this","onRefreshUser","fallback","path","items","createReducer","payload","filter","id","loading","combineReducers","initialUserState","email","_","setError","middleware","storage","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","phoneBookReducer","devTools","process","persistor","persistStore","ReactDOM","document","querySelector"],"mappings":"+IAAA,+VAEaA,EAAsBC,YAAa,+BACnCC,EAAsBD,YAAa,+BACnCE,EAAoBF,YAAa,6BAEjCG,EAAoBH,YAAa,6BACjCI,EAAoBJ,YAAa,6BACjCK,EAAkBL,YAAa,2BAE/BM,EAAuBN,YAAa,gCACpCO,EAAuBP,YAAa,gCACpCQ,EAAqBR,YAAa,8BAGlCS,GADgBT,YAAa,kBACdA,YAAa,0B,mBCdzCU,EAAOC,QAAU,CAAC,KAAO,yBAAyB,WAAa,+BAA+B,UAAY,8BAA8B,YAAc,kC,mBCAtJD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,oBAAsB,sCAAsC,SAAW,2BAA2B,UAAY,4BAA4B,OAAS,2B,mBCA7MD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,WAAa,4BAA4B,UAAY,2BAA2B,aAAe,gC,mGCI9IC,IAAMC,SAASC,QAAU,wCAEzB,IAAMC,EAAQ,SACNA,GACAH,IAAMC,SAASG,QAAQC,OAAOC,cAA9B,iBAAwDH,IAF1DA,EAAQ,WAKNH,IAAMC,SAASG,QAAQC,OAAOC,cAAgB,IAiFvC,KAAEC,SA7EA,SAACC,GAAD,8CAAiB,WAAOC,GAAP,eAAAC,EAAA,6DAC9BD,EAASE,IAAYC,mBADS,kBAIHZ,IAAMa,KAAK,gBAAiBL,GAJzB,OAIpBM,EAJoB,OAK1BX,EAAUW,EAASC,KAAKZ,OAExBM,EAASE,IAAYK,gBAAgBF,EAASC,OAPpB,gDAS1BN,EAASE,IAAYM,cAAc,KAAMC,UACzCC,IAAMC,MAAM,kCAAmC,CAC3CC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAjBY,yDAAjB,uDA6EUC,MAvDb,SAACrB,GAAD,8CAAiB,WAAOC,GAAP,eAAAC,EAAA,6DAC3BD,EAASE,IAAYmB,gBADM,kBAIA9B,IAAMa,KAAK,eAAgBL,GAJ3B,OAIjBM,EAJiB,OAKvBX,EAAUW,EAASC,KAAKZ,OAExBM,EAASE,IAAYoB,aAAajB,EAASC,OAPpB,gDASvBN,EAASE,IAAYqB,WAAW,KAAMd,UACtCC,IAAMC,MACF,2DACA,CACIC,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAnBK,yDAAjB,uDAuDoBK,OA9BnB,yDAAM,WAAOxB,GAAP,SAAAC,EAAA,6DACjBD,EAASE,IAAYuB,iBADJ,kBAIPlC,IAAMa,KAAK,iBAJJ,OAKbV,IACAM,EAASE,IAAYwB,iBANR,gDAQb1B,EAASE,IAAYyB,YAAY,KAAMlB,UAR1B,yDAAN,uDA8B2BmB,eAlBnB,yDAAM,WAAO5B,EAAU6B,GAAjB,mBAAA5B,EAAA,2DAGrB4B,IADeC,EAFM,EAErBC,KAAQrC,MAFa,wDAOzBA,EAAUoC,GACV9B,EAASE,IAAY8B,yBARI,kBAWEzC,IAAM0C,IAAI,kBAXZ,OAWf5B,EAXe,OAYrBL,EAASE,IAAYgC,sBAAsB7B,EAASC,OAZ/B,kDAcrBN,EAASE,IAAYiC,oBAAoB,KAAM1B,UAd1B,0DAAN,2D,+BC3EvB,WAEMN,EAAkBxB,YAAa,wBAC/B4B,EAAkB5B,YAAa,wBAC/B6B,EAAgB7B,YAAa,sBAE7B0C,EAAe1C,YAAa,qBAC5B2C,EAAe3C,YAAa,qBAC5B4C,EAAa5C,YAAa,mBAE1B8C,EAAgB9C,YAAa,sBAC7B+C,EAAgB/C,YAAa,sBAC7BgD,EAAchD,YAAa,oBAE3BqD,EAAwBrD,YAAa,8BACrCuD,EAAwBvD,YAAa,8BACrCwD,EAAsBxD,YAAa,4BAE1B,KACXwB,kBACAI,kBACAC,gBACAa,eACAC,eACAC,aACAE,gBACAC,gBACAC,cACAK,wBACAE,wBACAC,wB,mBC7BJ9C,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,yB,mBCAjED,EAAOC,QAAU,CAAC,UAAY,+B,wCCA9BD,EAAOC,QAAU,CAAC,UAAY,uBAAuB,iBAAmB,8BAA8B,uBAAyB,oCAAoC,qBAAuB,kCAAkC,2BAA6B,wCAAwC,oBAAsB,iCAAiC,0BAA4B,uCAAuC,sBAAwB,mCAAmC,4BAA8B,2C,oKCSre8C,EANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,qBAAKC,UAAWC,IAAOH,UAAvB,SAAmCC,K,gCCFxB,EAHY,SAACG,GAAD,OAAWA,EAAMT,KAAKU,iBAGlC,EAFE,SAACD,GAAD,OAAWA,EAAMT,KAAKW,KAAKC,MCoC7BC,eAJS,SAACJ,GAAD,MAAY,CAChCC,gBAAiBI,EAAiCL,MAGd,KAAzBI,EA9BI,SAAC,GAAD,IAAGH,EAAH,EAAGA,gBAAH,OACf,sBAAKH,UAAWC,IAAOH,UAAvB,UACI,cAAC,IAAD,CACIU,GAAG,IACHC,OAAK,EACLT,UAAWC,IAAOS,KAClBC,gBAAiBV,IAAOW,WAJ5B,SAMI,oBAAIZ,UAAWC,IAAOY,YAAtB,oBAGHV,GACG,cAAC,IAAD,CACIK,GAAG,YACHC,OAAK,EACLT,UAAWC,IAAOS,KAClBC,gBAAiBV,IAAOW,WAJ5B,SAMI,oBAAIZ,UAAWC,IAAOY,YAAtB,8BCzBD,MAA0B,mCCA1B,MAA0B,wC,yBC6CnCC,EAAqB,CAAEC,SAAUC,IAAe9B,QAQvCoB,eAdS,SAACJ,GAAD,MAAY,CAChCG,KAAME,EAAuBL,GAC7Be,OAAQC,EACRhC,OAAQiC,KAW4BL,EAAzBR,EA5CE,SAAC,GAAuC,IAArCW,EAAoC,EAApCA,OAAO/B,EAA6B,EAA7BA,OAAQmB,EAAqB,EAArBA,KAAMU,EAAe,EAAfA,SACrC,OACI,sBAAKf,UAAWC,IAAOH,UAAvB,UACI,qBACIsB,IAAKH,EACLI,IAAI,GACJC,MAAM,KACNC,OAAO,KACPvB,UAAWC,IAAOuB,SAEtB,sBAAKxB,UAAWC,IAAOwB,oBAAvB,UACI,qBAAIzB,UAAWC,IAAOyB,SAAtB,qBAAyCrB,KACzC,wBACIsB,KAAK,SACLC,QAASb,EACTf,UAAWC,IAAO4B,UAHtB,SAKI,qBACIT,IAAKlC,EACLmC,IAAI,GACJC,MAAM,KACNC,OAAO,KACPvB,UAAWC,IAAOuB,oB,iBCH3BM,EAvBC,kBACZ,sBAAK9B,UAAWC,IAAOH,UAAvB,UACI,cAAC,IAAD,CACIU,GAAG,YACHC,OAAK,EACLT,UAAWC,IAAOS,KAClBC,gBAAiBV,IAAOW,WAJ5B,SAMI,oBAAIZ,UAAWC,IAAO8B,aAAtB,4BAEJ,cAAC,IAAD,CACIvB,GAAG,SACHC,OAAK,EACLT,UAAWC,IAAOS,KAClBC,gBAAiBV,IAAOW,WAJ5B,SAMI,6C,iBCIGN,GCzBA,IDyBAA,aAJS,SAACJ,GAAD,MAAY,CAChCC,gBAAiBI,EAAiCL,MAGd,KAAzBI,EAfA,SAAC,GAAD,IAAGH,EAAH,EAAGA,gBAAH,OACX,qBAAKH,UAAWC,IAAOH,UAAvB,SACI,yBAAQE,UAAWC,IAAO+B,OAA1B,UACI,cAAC,EAAD,IACC7B,EAAkB,cAAC,EAAD,IAAe,cAAC,EAAD,a,qCEmB/BG,eAJS,SAACJ,GAAD,MAAY,CAChCC,gBAAiBI,EAAiCL,MAGd,KAAzBI,EA3BM,SAAC,GAAD,IACN2B,EADM,EACjBC,UACA/B,EAFiB,EAEjBA,gBACAgC,EAHiB,EAGjBA,WACGC,EAJc,mEAMjB,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAACC,GAAD,OACJnC,EACI,cAAC8B,EAAD,eAAeK,IAEf,cAAC,IAAD,CAAU9B,GAAI2B,WCef7B,eAJS,SAACJ,GAAD,MAAY,CAChCC,gBAAiBI,EAAiCL,MAGd,KAAzBI,EA3BK,SAAC,GAAD,IACL2B,EADK,EAChBC,UACA/B,EAFgB,EAEhBA,gBACAgC,EAHgB,EAGhBA,WACGC,EAJa,mEAMhB,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAACC,GAAD,OACJnC,GAAmBiC,EAAWG,WAC1B,cAAC,IAAD,CAAU/B,GAAI2B,IAEd,cAACF,EAAD,eAAeK,WCNzBE,EAAWC,gBAAK,kBAAM,uDACtBC,EAAQD,gBAAK,kBAAM,uDACnBE,EAAWF,gBAAK,kBAAM,uDACtBG,EAAYH,gBAAK,kBAAM,8DAEvBI,E,uKACF,WACIC,KAAKR,MAAMS,kB,oBAEf,WACI,OACI,eAAC,EAAD,WACI,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,4CAApB,SACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAavC,OAAK,EAACwC,KAAK,IAAIf,UAAWM,IACvC,cAAC,EAAD,CACIS,KAAK,YACLV,YAAU,EACVL,UAAWS,EACXR,WAAW,cAGf,cAAC,EAAD,CACIc,KAAK,SACLV,YAAU,EACVL,UAAWQ,EACXP,WAAW,cAEf,cAAC,EAAD,CACI1B,OAAK,EACLwC,KAAK,YACLf,UAAWU,EACXT,WAAW,uB,GA5BrBF,aAqCZnB,EAAqB,CACvBiC,cAAe/B,IAAe1B,gBAGnBgB,cAAQ,KAAMQ,EAAdR,CAAkCuC,G,wCC3C3CK,GAAQC,YAAc,IAAD,oBACtB7G,MAAsB,SAAC4D,EAAD,YAAUkD,WADV,eAEtB3G,MAAoB,SAACyD,EAAD,OAAUkD,EAAV,EAAUA,QAAV,4BAA4BlD,GAA5B,CAAmCkD,OAFjC,eAItBxG,MAAuB,SAACsD,EAAD,OAAUkD,EAAV,EAAUA,QAAV,OACpBlD,EAAMmD,QAAO,qBAAGC,KAAgBF,QALb,IAOrBC,GAASF,YAAc,GAAD,gBACvBrG,MAAe,SAACoD,EAAD,YAAUkD,YAExBG,GAAUJ,aAAc,GAAD,oBACxB3G,MAAoB,kBAAM,KADF,eAExBC,MAAoB,kBAAM,KAFF,eAGxBC,MAAkB,kBAAM,KAHA,eAIxBC,MAAuB,kBAAM,KAJL,eAKxBC,MAAuB,kBAAM,KALL,eAMxBC,MAAqB,kBAAM,KANH,eAOxBT,MAAsB,kBAAM,KAPJ,eAQxBE,MAAsB,kBAAM,KARJ,eASxBC,MAAoB,kBAAM,KATF,IAYvB8B,GAAQ8E,YAAc,KAAM,IAEnBK,gBAAgB,CAC3BN,SACAG,UACAE,WACAlF,W,yDCvCEoF,GAAmB,CAAEpD,KAAM,KAAMqD,MAAO,MAExCtD,GAAO+C,YAAcM,IAAD,kBAAC,EACtB7F,KAAYK,iBAAkB,SAAC0F,EAAD,YAAMP,QAAsBhD,QADrC,aAAC,EAEtBxC,KAAYoB,cAAe,SAAC2E,EAAD,YAAMP,QAAsBhD,QAFlC,aAAC,EAGtBxC,KAAYwB,eAAgB,kBAAMqE,MAHb,aAAC,EAItB7F,KAAYgC,uBAAwB,SAAC+D,EAAD,YAAMP,WAJrB,IAMpBhG,GAAQ+F,YAAc,MAAD,oBACtBvF,KAAYK,iBAAkB,SAAC0F,EAAD,YAAMP,QAAsBhG,SADpC,eAEtBQ,KAAYoB,cAAe,SAAC2E,EAAD,YAAMP,QAAsBhG,SAFjC,eAGtBQ,KAAYwB,eAAgB,SAACuE,EAAD,KAAMP,QAAN,OAAoB,QAH1B,IAMrBQ,GAAW,SAACD,EAAD,YAAMP,SAEjB/E,GAAQ8E,aAAc,GAAD,kBAAC,EACvBvF,KAAYM,cAAgB0F,IADN,aAAC,EAEvBhG,KAAYqB,WAAa2E,IAFH,aAAC,EAGvBhG,KAAYyB,YAAcuE,IAHJ,aAAC,EAIvBhG,KAAYiC,oBAAsB+D,IAJZ,IAOrBzD,GAAkBgD,aAAc,GAAD,oBAChCvF,KAAYK,iBAAkB,kBAAM,KADJ,eAEhCL,KAAYoB,cAAe,kBAAM,KAFD,eAGhCpB,KAAYgC,uBAAwB,kBAAM,KAHV,eAIhChC,KAAYM,eAAgB,kBAAM,KAJF,eAKhCN,KAAYqB,YAAa,kBAAM,KALC,eAMhCrB,KAAYiC,qBAAsB,kBAAM,KANR,eAOhCjC,KAAYwB,eAAgB,kBAAM,KAPF,IAUtBoE,gBAAgB,CAC3BpD,QACAD,mBACA/C,SACAiB,WCfEwF,IARFC,KAKAA,KAGY,sBACTC,YAAqB,CACpBC,kBAAmB,CACfC,eAAgB,CAACC,KAAOC,KAAWC,KAAOC,KAASC,KAAOC,UAHtD,CAMZC,QAGEC,GAAoB,CAAEC,IAAK,OAAQZ,aAASa,UAAW,CAAC,UAExDC,GAAQC,YAAe,CACzBC,QAAS,CACLrF,KAAMsF,aAAeN,GAAmBO,IACxCC,SAAUC,IAEdrB,cACAsB,UAAUC,IAKC,IAAER,SAAOS,UAFNC,aAAaV,K,SCpC/BW,IAASlD,OACL,cAAC,IAAD,CAAUuC,MAAOA,GAAMA,MAAvB,SACI,cAAC,KAAD,CAAarB,QAAS,UAAW8B,UAAWT,GAAMS,UAAlD,SACI,cAAC,IAAD,UACI,cAAC,EAAD,UAIZG,SAASC,cAAc,Y","file":"static/js/main.54f96e21.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit'\r\n\r\nexport const fetchContactRequest = createAction('contact/fetchContactRequest')\r\nexport const fetchContactSuccess = createAction('contact/fetchContactSuccess')\r\nexport const fetchContactError = createAction('contact/fetchContactError')\r\n\r\nexport const addContactRequest = createAction('contact/addContactRequest')\r\nexport const addContactSuccess = createAction('contact/addContactSuccess')\r\nexport const addContactError = createAction('contact/addContactError')\r\n\r\nexport const deleteContactRequest = createAction('contact/deleteContactRequest')\r\nexport const deleteContactSuccess = createAction('contact/deleteContactSuccess')\r\nexport const deleteContactError = createAction('contact/deleteContactError')\r\n\r\nexport const deleteContact = createAction('contact/delete')\r\nexport const changeFilter = createAction('contact/changeFilter')\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"Navigation_Link__19Yeo\",\"LinkActive\":\"Navigation_LinkActive__3-xry\",\"Container\":\"Navigation_Container__2bHY4\",\"HeaderTitle\":\"Navigation_HeaderTitle__153Ms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"UserMenu_Container__2vAl1\",\"ContainerUserCorner\":\"UserMenu_ContainerUserCorner__1fqoB\",\"UserName\":\"UserMenu_UserName__1OJ4Q\",\"LogOutBtn\":\"UserMenu_LogOutBtn__3vwfa\",\"Avatar\":\"UserMenu_Avatar__2MFq8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Link\":\"AuthNav_Link__2Ewqv\",\"LinkActive\":\"AuthNav_LinkActive__vCtGp\",\"Container\":\"AuthNav_Container__3GRzr\",\"Registration\":\"AuthNav_Registration__1MzAW\"};","import axios from 'axios'\r\nimport authActions from './auth-actions'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com'\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = ''\r\n    },\r\n}\r\n\r\nconst register = (credentials) => async (dispatch) => {\r\n    dispatch(authActions.registerRequest())\r\n\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials)\r\n        token.set(response.data.token)\r\n\r\n        dispatch(authActions.registerSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(authActions.registerError(error.message))\r\n        toast.error('This user is already registered', {\r\n            position: 'top-center',\r\n            autoClose: 2000,\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        })\r\n    }\r\n}\r\n\r\nconst login = (credentials) => async (dispatch) => {\r\n    dispatch(authActions.loginRequest())\r\n\r\n    try {\r\n        const response = await axios.post('/users/login', credentials)\r\n        token.set(response.data.token)\r\n\r\n        dispatch(authActions.loginSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(authActions.loginError(error.message))\r\n        toast.error(\r\n            'Login data is incorrect. Please check data and try again',\r\n            {\r\n                position: 'top-center',\r\n                autoClose: 2000,\r\n                hideProgressBar: true,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nconst logout = () => async (dispatch) => {\r\n    dispatch(authActions.logoutRequest())\r\n\r\n    try {\r\n        await axios.post('/users/logout')\r\n        token.unset()\r\n        dispatch(authActions.logoutSuccess())\r\n    } catch (error) {\r\n        dispatch(authActions.logoutError(error.message))\r\n    }\r\n}\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState()\r\n    if (!persistedToken) {\r\n        return\r\n    }\r\n    token.set(persistedToken)\r\n    dispatch(authActions.getCurrentUserRequest())\r\n\r\n    try {\r\n        const response = await axios.get('/users/current')\r\n        dispatch(authActions.getCurrentUserSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(authActions.getCurrentUserError(error.message))\r\n    }\r\n}\r\n\r\nexport default { register, login, logout, getCurrentUser }\r\n","import { createAction } from '@reduxjs/toolkit'\r\n\r\nconst registerRequest = createAction('auth/registerRequest')\r\nconst registerSuccess = createAction('auth/registerSuccess')\r\nconst registerError = createAction('auth/registerError')\r\n\r\nconst loginRequest = createAction('auth/loginRequest')\r\nconst loginSuccess = createAction('auth/loginSuccess')\r\nconst loginError = createAction('auth/loginError')\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest')\r\nconst logoutSuccess = createAction('auth/logoutSuccess')\r\nconst logoutError = createAction('auth/logoutError')\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest')\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess')\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError')\r\n\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"AppBar_Container__19nk5\",\"Header\":\"AppBar_Header__SlRml\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3x5dW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"App_Container__2yW8r\",\"HeaderFadeAppear\":\"App_HeaderFadeAppear__2Cu-M\",\"HeaderFadeAppearActive\":\"App_HeaderFadeAppearActive__2oDWc\",\"ContactListFadeEnter\":\"App_ContactListFadeEnter__2HI22\",\"ContactListFadeEnterActive\":\"App_ContactListFadeEnterActive__1AGd1\",\"ContactListFadeExit\":\"App_ContactListFadeExit__1KrOT\",\"ContactListFadeExitActive\":\"App_ContactListFadeExitActive__2ANA3\",\"ContactListFadeAppear\":\"App_ContactListFadeAppear__1V9Ig\",\"ContactListFadeAppearActive\":\"App_ContactListFadeAppearActive__2SZ6Y\"};","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Container.module.css'\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={styles.Container}>{children}</div>\r\n)\r\n\r\nContainer.propTypes = {}\r\n\r\nexport default Container\r\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated\r\nconst userName = (state) => state.auth.user.name\r\n\r\nexport default {\r\n    getIsAuthenticated,\r\n    userName,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Navigation.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport authSelectors from '../../redux/auth/auth-selectors'\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n    <nav className={styles.Container}>\r\n        <NavLink\r\n            to=\"/\"\r\n            exact\r\n            className={styles.Link}\r\n            activeClassName={styles.LinkActive}\r\n        >\r\n            <h3 className={styles.HeaderTitle}>Home</h3>\r\n        </NavLink>\r\n\r\n        {isAuthenticated && (\r\n            <NavLink\r\n                to=\"/contacts\"\r\n                exact\r\n                className={styles.Link}\r\n                activeClassName={styles.LinkActive}\r\n            >\r\n                <h3 className={styles.HeaderTitle}>Contacts</h3>\r\n            </NavLink>\r\n        )}\r\n    </nav>\r\n)\r\n\r\nNavigation.propTypes = { isAuthenticated: PropTypes.bool.isRequired }\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(Navigation)\r\n","export default __webpack_public_path__ + \"static/media/avatar.e35f672d.svg\";","export default __webpack_public_path__ + \"static/media/logout-icon.fee70861.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport authSelectors from '../../redux/auth/auth-selectors'\r\nimport { connect } from 'react-redux'\r\nimport defaultAvatar from '../../img/avatar.svg'\r\nimport logoutIcon from '../../img/logout-icon.svg'\r\nimport authOperations from '../../redux/auth/auth-operations'\r\nimport styles from './UserMenu.module.css'\r\n\r\nconst UserMenu = ({ avatar,logout, name, onLogout }) => {\r\n    return (\r\n        <div className={styles.Container}>\r\n            <img\r\n                src={avatar}\r\n                alt=\"\"\r\n                width=\"42\"\r\n                height=\"42\"\r\n                className={styles.Avatar}\r\n            />\r\n            <div className={styles.ContainerUserCorner}>\r\n                <h2 className={styles.UserName}>Welcome {name}</h2>\r\n                <button\r\n                    type=\"button\"\r\n                    onClick={onLogout}\r\n                    className={styles.LogOutBtn}\r\n                >\r\n                    <img\r\n                        src={logout}\r\n                        alt=\"\"\r\n                        width=\"24\"\r\n                        height=\"24\"\r\n                        className={styles.Avatar}\r\n                    />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    name: authSelectors.userName(state),\r\n    avatar: defaultAvatar,\r\n    logout: logoutIcon,\r\n})\r\n\r\nconst mapDispatchToProps = { onLogout: authOperations.logout }\r\n\r\nUserMenu.propTypes = {\r\n    onLogout: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './AuthNav.module.css'\r\n\r\nconst AuthNav = () => (\r\n    <div className={styles.Container}>\r\n        <NavLink\r\n            to=\"/register\"\r\n            exact\r\n            className={styles.Link}\r\n            activeClassName={styles.LinkActive}\r\n        >\r\n            <h3 className={styles.Registration}>Registration</h3>\r\n        </NavLink>\r\n        <NavLink\r\n            to=\"/login\"\r\n            exact\r\n            className={styles.Link}\r\n            activeClassName={styles.LinkActive}\r\n        >\r\n            <h3>Login</h3>\r\n        </NavLink>\r\n    </div>\r\n)\r\n\r\nAuthNav.propTypes = {}\r\n\r\nexport default AuthNav\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Navigation from '../Navigation/Navigation'\r\nimport UserMenu from '../UserMenu/UserMenu'\r\nimport AuthNav from '../AuthNav/AuthNav'\r\nimport styles from './AppBar.module.css'\r\nimport { connect } from 'react-redux'\r\nimport authSelectors from '../../redux/auth/auth-selectors'\r\nimport BckgroundImage from '../../img/background.jpg'\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n    <div className={styles.Container}>\r\n        <header className={styles.Header}>\r\n            <Navigation />\r\n            {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n    </div>\r\n)\r\n\r\nAppBar.propTypes = { isAuthenticated: PropTypes.bool.isRequired }\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(AppBar)\r\n","export default __webpack_public_path__ + \"static/media/background.85ead65b.jpg\";","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport authSelectors from '../../redux/auth/auth-selectors'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    reDirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={(props) =>\r\n            isAuthenticated ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to={reDirectTo} />\r\n            )\r\n        }\r\n    />\r\n)\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    reDirectTo: PropTypes.string.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(PrivateRoute)\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport authSelectors from '../../redux/auth/auth-selectors'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    reDirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={(props) =>\r\n            isAuthenticated && routeProps.restricted ? (\r\n                <Redirect to={reDirectTo} />\r\n            ) : (\r\n                <Component {...props} />\r\n            )\r\n        }\r\n    />\r\n)\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    reDirectTo: PropTypes.string,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(PublicRoute)\r\n","import React, { Component, Suspense, lazy } from 'react'\r\nimport Container from './components/Container/Container'\r\nimport AppBar from './components/AppBar/AppBar'\r\nimport styles from './App.module.css'\r\nimport './App.css'\r\nimport { Switch } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport authOperations from './redux/auth/auth-operations'\r\nimport PrivateRoute from './components/PrivateRoute/privateRoute'\r\nimport PublicRoute from './components/PublicRoute/publicRoute'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nconst HomePage = lazy(() => import('./components/HomePage/Homepage'))\r\nconst Login = lazy(() => import('./components/Login/Login'))\r\nconst Register = lazy(() => import('./components/Register/Register'))\r\nconst Phonebook = lazy(() => import('./components/Phonebook/Phonebook'))\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.onRefreshUser()\r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <AppBar />\r\n                <Suspense fallback={<h1>Loading...</h1>}>\r\n                    <Switch>\r\n                        <PublicRoute exact path=\"/\" component={HomePage} />\r\n                        <PublicRoute\r\n                            path=\"/register\"\r\n                            restricted\r\n                            component={Register}\r\n                            reDirectTo=\"/contacts\"\r\n                        />\r\n\r\n                        <PublicRoute\r\n                            path=\"/login\"\r\n                            restricted\r\n                            component={Login}\r\n                            reDirectTo=\"/contacts\"\r\n                        />\r\n                        <PrivateRoute\r\n                            exact\r\n                            path=\"/contacts\"\r\n                            component={Phonebook}\r\n                            reDirectTo=\"/login\"\r\n                        />\r\n                    </Switch>\r\n                </Suspense>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onRefreshUser: authOperations.getCurrentUser,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App)\r\n","import { combineReducers } from 'redux'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport {\r\n    addContactSuccess,\r\n    addContactRequest,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    changeFilter,\r\n} from './phonebook-actions'\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (state, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n        state.filter(({ id }) => id !== payload),\r\n})\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (state, { payload }) => payload,\r\n})\r\nconst loading = createReducer(false, {\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n})\r\n\r\nconst error = createReducer(null, {})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n    error,\r\n})\r\n","import { combineReducers } from 'redux'\r\nimport { createReducer } from '@reduxjs/toolkit'\r\nimport authActions from './auth-actions'\r\n\r\nconst initialUserState = { name: null, email: null }\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n})\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: (_, { payload }) => null,\r\n})\r\n\r\nconst setError = (_, { payload }) => payload\r\n\r\nconst error = createReducer(false, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError,\r\n})\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error,\r\n})\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport phoneBookReducer from '../phonebook/phonebook-reducers'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport logger from 'redux-logger'\r\nimport authReducer from '../auth/auth-reducers'\r\n\r\nconst persistConfig = {\r\n    key: 'myRoot',\r\n    storage,\r\n}\r\n\r\nconst phonebookPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n}\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n]\r\n\r\nconst authPersistConfig = { key: 'auth', storage, whitelist: ['token'] }\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: phoneBookReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nconst persistor = persistStore(store)\r\n\r\nexport default { store, persistor }\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/phonebook/store'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { BrowserRouter, Router } from 'react-router-dom'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n    <Provider store={store.store}>\r\n        <PersistGate loading={'Loading'} persistor={store.persistor}>\r\n            <BrowserRouter>\r\n                <App />\r\n            </BrowserRouter>\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n)\r\n"],"sourceRoot":""}